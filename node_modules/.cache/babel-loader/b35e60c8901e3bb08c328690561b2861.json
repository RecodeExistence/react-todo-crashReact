{"ast":null,"code":"var _jsxFileName = \"/home/recodelife/Documents/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport Addtodo from './components/AddToDo';\nimport About from './components/pages/About';\nimport uuid from 'uuid';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addToDo = title => {\n      const newTodo = {\n        id: 4,\n        title,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/todos').then(res => console.log(res.data));\n  } // Toggle Complete \n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Addtodo, {\n        addToDo: this.addToDo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/recodelife/Documents/todo/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Todos","Header","Addtodo","About","uuid","Axios","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","addToDo","title","newTodo","componentDidMount","get","then","res","console","log","data","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport Addtodo from './components/AddToDo';\nimport About from './components/pages/About';\nimport uuid from 'uuid';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    todos: []\n  }\n\ncomponentDidMount() {\n  Axios.get('https://jsonplaceholder.typicode.com/todos').then(res => console.log(res.data))\n}\n  // Toggle Complete \n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    }) });\n  }\n\n  // Delete Todo\n  delTodo = (id) => {\n    this.setState({ todos: [\n      ...this.state.todos.filter(todo => todo.id !== id)\n    ]});\n  }\n\n  //Add ToDo \n  addToDo = (title) => {\n    const newTodo = {\n      id: 4, \n      title, \n      completed: false\n    }\n    this.setState({ todos: [...this.state.todos, newTodo]})\n  }\n\n  render() {\n\n    return (\n      <Router> \n      <div className = \"App\">\n        <div className = 'container'>\n        <Header />\n        <Route exact path = \"/\" render ={props => (\n          <React.Fragment>\n            \n        <Addtodo addToDo = {this.addToDo}/>\n        <Todos todos = {this.state.todos}\n         markComplete = {this.markComplete}\n        delTodo = {this.delTodo} />\n          </React.Fragment>\n        )} />\n        \n        <Route path = \"/about\" component = {About} />\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}